/*
BUTTONS FOR USE IN MENUS

REGISTRY: [47, 54, 57]

From: https://getcssscan.com/css-checkboxes-examples
*/

/*
<div class="checkbox-wrapper-33">
  <label class="checkbox">
    <input class="checkbox__trigger visuallyhidden" type="checkbox" />
    <span class="checkbox__symbol">
      <svg aria-hidden="true" class="icon-checkbox" width="28px" height="28px" viewBox="0 0 28 28" version="1" xmlns="http://www.w3.org/2000/svg">
        <path d="M4 14l8 7L24 7"></path>
      </svg>
    </span>
    <p class="checkbox__textwrapper">Checkbox</p>
  </label>
</div>
*/

.checkbox-wrapper-33 {
--s-xsmall: 0.625em;
--s-small: 1.2em;
--border-width: 1px;
--c-primary: #5F11E8;
--c-primary-20-percent-opacity: rgb(95 17 232 / 20%);
--c-primary-10-percent-opacity: rgb(95 17 232 / 10%);
--t-base: 0.4s;
--t-fast: 0.2s;
--e-in: ease-in;
--e-out: cubic-bezier(.11,.29,.18,.98);
}

.checkbox-wrapper-33 .visuallyhidden {
border: 0;
clip: rect(0 0 0 0);
height: 1px;
margin: -1px;
overflow: hidden;
padding: 0;
position: absolute;
width: 1px;
}

.checkbox-wrapper-33 .checkbox {
display: flex;
align-items: center;
justify-content: flex-start;
}
.checkbox-wrapper-33 .checkbox + .checkbox {
margin-top: var(--s-small);
}
.checkbox-wrapper-33 .checkbox__symbol {
display: inline-block;
display: flex;
margin-right: calc(var(--s-small) * 0.7);
border: var(--border-width) solid var(--c-primary);
position: relative;
border-radius: 0.1em;
width: 1.5em;
height: 1.5em;
transition: box-shadow var(--t-base) var(--e-out), background-color var(--t-base);
box-shadow: 0 0 0 0 var(--c-primary-10-percent-opacity);
}
.checkbox-wrapper-33 .checkbox__symbol:after {
content: "";
position: absolute;
top: 0.5em;
left: 0.5em;
width: 0.25em;
height: 0.25em;
background-color: var(--c-primary-20-percent-opacity);
opacity: 0;
border-radius: 3em;
transform: scale(1);
transform-origin: 50% 50%;
}
.checkbox-wrapper-33 .checkbox .icon-checkbox {
width: 1em;
height: 1em;
margin: auto;
fill: none;
stroke-width: 3;
stroke: currentColor;
stroke-linecap: round;
stroke-linejoin: round;
stroke-miterlimit: 10;
color: var(--c-primary);
display: inline-block;
}
.checkbox-wrapper-33 .checkbox .icon-checkbox path {
transition: stroke-dashoffset var(--t-fast) var(--e-in);
stroke-dasharray: 30px, 31px;
stroke-dashoffset: 31px;
}
.checkbox-wrapper-33 .checkbox__textwrapper {
margin: 0;
}
.checkbox-wrapper-33 .checkbox__trigger:checked + .checkbox__symbol:after {
-webkit-animation: ripple-33 1.5s var(--e-out);
        animation: ripple-33 1.5s var(--e-out);
}
.checkbox-wrapper-33 .checkbox__trigger:checked + .checkbox__symbol .icon-checkbox path {
transition: stroke-dashoffset var(--t-base) var(--e-out);
stroke-dashoffset: 0px;
}
.checkbox-wrapper-33 .checkbox__trigger:focus + .checkbox__symbol {
box-shadow: 0 0 0 0.25em var(--c-primary-20-percent-opacity);
}

@-webkit-keyframes ripple-33 {
from {
    transform: scale(0);
    opacity: 1;
}
to {
    opacity: 0;
    transform: scale(20);
}
}

@keyframes ripple-33 {
from {
    transform: scale(0);
    opacity: 1;
}
to {
    opacity: 0;
    transform: scale(20);
}
}

/*
<div class="checkbox-wrapper-47">
  <input type="checkbox" name="cb" id="cb-47" />
  <label for="cb-47">Check this</label>
</div>
*/

.checkbox-wrapper-47 input[type="checkbox"] {
display: none;
visibility: hidden;
}

.checkbox-wrapper-47 label {
position: relative;
padding-left: 2em;
padding-right: 1em;
line-height: 2;
cursor: pointer;
display: inline-flex;
}

.checkbox-wrapper-47 label:before {
box-sizing: border-box;
content: " ";
position: absolute;
top: 0.3em;
left: 0;
display: block;
width: 1.4em;
height: 1.4em;
border: 2px solid #9098A9;
border-radius: 6px;
z-index: -1;
}

.checkbox-wrapper-47 input[type=checkbox]:checked + label {
padding-left: 1em;
color: #0f5229;
}
.checkbox-wrapper-47 input[type=checkbox]:checked + label:before {
top: 0;
width: 100%;
height: 2em;
background: #b7e6c9;
border-color: #2cbc63;
}

.checkbox-wrapper-47 label,
.checkbox-wrapper-47 label::before {
transition: 0.25s all ease;
}

/*
<div class="checkbox-wrapper-54">
  <label class="switch">
    <input type="checkbox">
    <span class="slider"></span>
  </label>
</div>
*/

.checkbox-wrapper-54 input[type="checkbox"] {
visibility: hidden;
display: none;
}

.checkbox-wrapper-54 *,
.checkbox-wrapper-54 ::after,
.checkbox-wrapper-54 ::before {
box-sizing: border-box;
}

/* The switch - the box around the slider */
.checkbox-wrapper-54 .switch {
--width-of-switch: 3.5em;
--height-of-switch: 2em;
/* size of sliding icon -- sun and moon */
--size-of-icon: 1.4em;
/* it is like a inline-padding of switch */
--slider-offset: 0.3em;
position: relative;
width: var(--width-of-switch);
height: var(--height-of-switch);
display: inline-block;
}

/* The slider */
.checkbox-wrapper-54 .slider {
position: absolute;
cursor: pointer;
top: 0;
left: 0;
right: 0;
bottom: 0;
background-color: #f4f4f5;
transition: .4s;
border-radius: 30px;
}

.checkbox-wrapper-54 .slider:before {
position: absolute;
content: "";
height: var(--size-of-icon,1.4em);
width: var(--size-of-icon,1.4em);
border-radius: 20px;
left: var(--slider-offset,0.3em);
top: 50%;
transform: translateY(-50%);
background: linear-gradient(40deg,#ff0080,#ff8c00 70%);
;
transition: .4s;
}

.checkbox-wrapper-54 input:checked + .slider {
background-color: #303136;
}

.checkbox-wrapper-54 input:checked + .slider:before {
left: calc(100% - (var(--size-of-icon,1.4em) + var(--slider-offset,0.3em)));
background: #303136;
/* change the value of second inset in box-shadow to change the angle and direction of the moon  */
box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb;
}

/*
<div class="checkbox-wrapper-57">
  <label class="container">
    <input type="checkbox">
    <div class="checkmark"></div>
  </label>
</div>
*/

.checkbox-wrapper-57 input[type="checkbox"] {
visibility: hidden;
display: none;
}

.checkbox-wrapper-57 *,
.checkbox-wrapper-57 ::after,
.checkbox-wrapper-57 ::before {
box-sizing: border-box;
}

.checkbox-wrapper-57 .container {
display: block;
position: relative;
cursor: pointer;
font-size: 25px;
user-select: none;
}

/* Create a custom checkbox */
.checkbox-wrapper-57 .checkmark {
position: relative;
top: 0;
left: 0;
height: 1.3em;
width: 1.3em;
background: black;
border-radius: 50px;
transition: all 0.7s;
--spread: 20px;
}

/* When the checkbox is checked, add a blue background */
.checkbox-wrapper-57 .container input:checked ~ .checkmark {
background: black;
box-shadow: -10px -10px var(--spread) 0px #5B51D8, 0 -10px var(--spread) 0px #833AB4, 10px -10px var(--spread) 0px #E1306C, 10px 0 var(--spread) 0px #FD1D1D, 10px 10px var(--spread) 0px #F77737, 0 10px var(--spread) 0px #FCAF45, -10px 10px var(--spread) 0px #FFDC80;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkbox-wrapper-57 .checkmark::after {
content: "";
position: absolute;
display: none;
}

/* Show the checkmark when checked */
.checkbox-wrapper-57 .container input:checked ~ .checkmark::after {
display: block;
}

/* Style the checkmark/indicator */
.checkbox-wrapper-57 .container .checkmark::after {
left: 0.5em;
top: 0.34em;
width: 0.25em;
height: 0.5em;
border: solid #f0f0f0;
border-width: 0 0.15em 0.15em 0;
transform: rotate(45deg);
}


